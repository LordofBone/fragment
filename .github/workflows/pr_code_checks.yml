name: Pull Request Checks

on:
  pull_request:
    paths:
      - '**/*.py'
      - 'shaders/**/*.glsl'
  workflow_dispatch:

jobs:
  python-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'  # specify your Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run flake8
        id: flake8-lint
        run: |
          flake8 . | tee flake8_output.txt
        continue-on-error: true

      - name: Annotate Python lint errors
        if: failure()
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            **Flake8 lint errors:**
            ```
            $(cat flake8_output.txt)
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  glsl-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install glslangValidator
        run: |
          sudo apt-get update
          sudo apt-get install -y glslang-tools

      - name: Run glslangValidator
        run: |
          find shaders -name "*.glsl" | while read file; do
            if [[ "$file" == *"fragment.glsl" ]]; then
              if ! glslangValidator -V "$file" -S frag; then
                echo "$file failed" >> glsl_errors.txt
              fi
            elif [[ "$file" == *"vertex.glsl" ]]; then
              if ! glslangValidator -V "$file" -S vert; then
                echo "$file failed" >> glsl_errors.txt
              fi
            else
              echo "$file has an unrecognized shader type" >> glsl_errors.txt
            fi
          done
        continue-on-error: true

      - name: Annotate GLSL errors
        if: failure()
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            **GLSL validation errors:**
            ```
            $(cat glsl_errors.txt)
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify-failure:
    needs: [ python-lint, glsl-lint ]
    runs-on: ubuntu-latest
    if: failure()

    steps:
      - name: Notify about the failure
        run: echo "One or more jobs failed. Please check the annotations and logs for details."
